<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Information object mapping">0cdb9db09770e9d0898cb4b0f053afc1</macroponent>
        <name>Update</name>
        <preset/>
        <required_translations/>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    var sys_id;
    var createOp, deleteOp, updateOp;
    if (api.context.props.operation == 'add') {
        sys_id = api.state.info_object;
        createOp = api.state.createOp == 'true' ? true : false;
        updateOp = api.state.updateOp == 'true' ? true : false;
        deleteOp = api.state.deleteOp == 'true' ? true : false;
    } else {
        sys_id = api.context.props.infoobjectMTomId;
        var applicableFor = api.data.gliderecord_query_2.output.data.GlideRecord_Query[api.context.props.infoobjectMTomTable]._results[0].applicable_for.value;

        if (!api.state.createOp)
            createOp = (applicableFor.indexOf('create') != -1);
        else
            createOp = api.state.createOp == 'true' ? true : false;

        if (!api.state.updateOp)
            updateOp = (applicableFor.indexOf('update') != -1);
        else
            updateOp = api.state.updateOp == 'true' ? true : false;

        if (!api.state.deleteOp)
            deleteOp = (applicableFor.indexOf('delete') != -1);
        else
            deleteOp = api.state.deleteOp == 'true' ? true : false;
    }

    api.data.information_object_map_1.execute({
        "parentId": api.context.props.sysId,
        "sys_id": sys_id,
        "table": api.context.props.infoobjectMTomTable,
        "operation": api.context.props.operation,
        "createOp": createOp,
        "updateOp": updateOp,
        "deleteOp": deleteOp
    });

    var relatedList = 'sn_grc_m2m_content_information_object.sn_grc_content';
    if(api.context.props.table=='sn_compliance_policy'){
        relatedList = 'sn_grc_m2m_document_information_object.sn_grc_document';
    }
    api.emit("RECORD#RELATED_LIST_REFRESH_REQUESTED", {
        relatedListName: relatedList
    });

    helpers.modal.close();
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-01 09:29:04</sys_created_on>
        <sys_id>28dbddb09770e9d0898cb4b0f053af32</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update</sys_name>
        <sys_package display_value="Modulo Antimafia" source="x_snc_modulo_ant_0">c786dc5497f4e1d0898cb4b0f053afe9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Modulo Antimafia">c786dc5497f4e1d0898cb4b0f053afe9</sys_scope>
        <sys_update_name>sys_ux_client_script_28dbddb09770e9d0898cb4b0f053af32</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-01 09:29:04</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
